syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";
option objc_class_prefix = "HLW";

package indy_demo;

service IndyTrans {

    // 提供onboarding服务
    rpc onboarding (stream IndyTransBytesRequest) returns (stream IndyTransBytesResponse) {
    }
}

/**
* 枚举通信协议
*/
enum TransCode {
    NOT_DEFINE = 0;
    ON_BOARDING_PRE_REQUEST = 1; // 《onboarding》一个没有 TRUST_ANCHOR 身份的节点想连接到一个具有 TRUST_ANCHOR 级的节点请求信息（内容为空）
    ON_BOARDING_REQUEST = 2; // 《onboarding》TRUST_ANCHOR（from） 一端向 客户端（to）发送连接请求
    ON_BOARDING_RESPONSE = 3; // 《onboarding》to 返回加密信息给 from
    ON_BOARDING_SUCCESS = 4; // 《onboarding》成功
    GET_VERINYM_REQUEST = 5; // 《getVerinym》向一个Steward级的节点，请求一个身份
    GET_VERINYM_SUCCESS = 6; // 《getVerinym》getVerinym的回复信息
    ERROR = 7; //通信过程中发送错误
}

message IndyTransBytesRequest {
    TransCode code = 1;
    bytes msg = 2;
}

message IndyTransBytesResponse {
    TransCode code = 1;
    bytes msg = 2;
}

